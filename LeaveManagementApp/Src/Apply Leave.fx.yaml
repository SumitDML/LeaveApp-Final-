"'Apply Leave' As screen":

    "'Left Navigation_14' As 'Left Navigation_11'":
        Visible: =var

    ScreenContainer1_4 As groupContainer.horizontalAutoLayoutContainer:
        Fill: =RGBA(249, 250, 252, 1)
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutGap: =30
        LayoutMode: =LayoutMode.Auto
        PaddingRight: =30
        Width: =Parent.Width
        ZIndex: =1

        SidebarContainer1_4 As groupContainer.verticalAutoLayoutContainer:
            FillPortions: =0
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            Visible: =If(App.ActiveScreen.Size<3,false,true)
            Width: ='Left Navigation_13'.Width
            ZIndex: =2

            "'Left Navigation_13' As 'Left Navigation'":
                LayoutMinHeight: =640
                LayoutMinWidth: =640
                Visible: =true
                Width: ='Left Navigation_13'.MenuWidth
                ZIndex: =1

        RightSideContainer1_4 As groupContainer.verticalAutoLayoutContainer:
            FillPortions: =7
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutDirection: =LayoutDirection.Vertical
            LayoutGap: =40
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            ZIndex: =3

            HeaderContainer1_4 As groupContainer.horizontalAutoLayoutContainer:
                FillPortions: =0
                Height: =Component2_8.Height
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =1

                Icon1_4 As icon.Add:
                    AlignInContainer: =AlignInContainer.Stretch
                    Color: =RGBA(0, 0, 0, 1)
                    Icon: =Icon.Hamburger
                    OnSelect: =Set(var,true)
                    Width: =If(App.ActiveScreen.Size<3,60,0)
                    ZIndex: =1

                Component2_8 As Component2_3:
                    FillPortions: =1
                    LayoutMinHeight: =640
                    LayoutMinWidth: =200
                    Width: =Parent.Width
                    ZIndex: =2

            Container14_1 As groupContainer.manualLayoutContainer:
                FillPortions: =4
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                ZIndex: =2

                Button2_22 As button:
                    BorderColor: =RGBA(202, 202, 202, 1)
                    BorderThickness: =1
                    DisabledBorderColor: =RGBA(202, 202, 202, 1)
                    DisabledColor: =RGBA(255, 255, 255, 1)
                    DisabledFill: =RGBA(255, 255, 255, 1)
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =Parent.Height-2
                    HoverFill: =
                    RadiusBottomLeft: =20
                    RadiusBottomRight: =20
                    RadiusTopLeft: =20
                    RadiusTopRight: =20
                    Text: =""
                    Width: =Parent.Width-2
                    X: =1
                    Y: =1
                    ZIndex: =1

                Label4_5 As label:
                    Font: =Font.'Lato Black'
                    Size: =14
                    Text: ="CHOOSE DATE"
                    X: =39
                    Y: =27
                    ZIndex: =2

                LblMonthSelected1_1 As label:
                    Height: =46
                    Size: =18
                    Text: =Text(_firstDayOfMonth, "mmmm yyyy")
                    Visible: =_calendarVisible
                    Width: =219
                    Wrap: =false
                    X: =77
                    Y: =136
                    ZIndex: =3

                WeekdayGallery1_1 As gallery.WeekdayGallery:
                    AccessibleLabel: ="Days of the week"
                    Height: =33
                    Items: =Calendar.WeekdaysShort()
                    ShowScrollbar: =false
                    TemplatePadding: =0
                    TemplateSize: =80
                    Visible: =_calendarVisible
                    Width: =556
                    X: =63
                    Y: =204
                    ZIndex: =4

                    Title5_1 As label:
                        Align: =Align.Center
                        Height: =WeekdayGallery1_1.TemplateHeight
                        OnSelect: =Select(Parent)
                        Size: =17 * WeekdayGallery1_1.TemplateWidth / 77
                        Text: =ThisItem.Value
                        Width: =WeekdayGallery1_1.TemplateWidth
                        Wrap: =false
                        X: =WeekdayGallery1_1.TemplateWidth / 2 - Self.Width / 2
                        Y: =WeekdayGallery1_1.TemplateHeight / 2 - Self.Height / 2
                        ZIndex: =1

                MonthDayGallery1_1 As gallery.MonthDayGallery:
                    AccessibleLabel: ="Days of selected month"
                    Height: =357
                    Items: =[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19, 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]
                    Layout: =Layout.Vertical
                    ShowScrollbar: =false
                    TemplatePadding: =0
                    TemplateSize: =60
                    Visible: =_calendarVisible
                    Width: =580
                    WrapCount: =7
                    X: =63
                    Y: =251
                    ZIndex: =5

                    Circle1_1 As circle:
                        Height: =Self.Width
                        OnSelect: =Select(Parent)
                        Visible: |-
                            =/*Visible if calendar events are found on this day*/               
                            CountRows(Filter(MyCalendarEvents, DateValue(Text(Start)) = DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days))) > 0 && !Subcircle1_1.Visible && Title6_1.Visible
                        Width: =6.5
                        X: =MonthDayGallery1_1.TemplateWidth / 2 - Self.Width / 2
                        Y: =MonthDayGallery1_1.TemplateHeight * (0.75)
                        ZIndex: =1

                    Subcircle1_1 As circle:
                        Height: =3 * Title6_1.Size
                        OnSelect: =Select(Parent)
                        Visible: =And(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, Title6_1.Visible)
                        Width: =Self.Height
                        X: =MonthDayGallery1_1.TemplateWidth/2 - Self.Width/2
                        Y: =MonthDayGallery1_1.TemplateHeight / 2 - Self.Height / 2
                        ZIndex: =2

                    Title6_1 As label:
                        Align: =Align.Center
                        BorderColor: =RGBA(0, 0, 0, 0)
                        Color: =If(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(255, 255, 255, 1), DateAdd(_firstDayInView, ThisItem.Value) = Today(), RGBA(47, 41, 43, 1), LblMonthSelected1_1.Color)
                        Fill: |-
                            =/*Fill value changes if the gallery item day = today, or if it lies outside of the current month*/             
                            If(
                                /*Date selected is today*/
                                DateAdd(_firstDayInView, ThisItem.Value) = Today() && DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(0,0,0,0),
                                /*Today when it is not selected*/
                                DateAdd(_firstDayInView, ThisItem.Value) = Today(), ColorFade(Subcircle1_1.Fill, 0.67), 
                                /*The day is outside the range of the currently selected month*/
                                Abs(Self.Text - ThisItem.Value) > 10,RGBA(200, 200, 200, 0.3), RGBA(0, 0, 0, 0))
                        FocusedBorderColor: =Self.Color
                        FocusedBorderThickness: =2
                        Height: =MonthDayGallery1_1.TemplateHeight
                        OnSelect: =Set(_dateSelected, DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days))
                        Size: =17 * MonthDayGallery1_1.TemplateWidth / 91
                        TabIndex: =0
                        Text: =Day(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days))
                        Visible: |-
                            =/*This item is in a row containing no days of the visible month. It is in the row after the row where the last day of the month occurs*/ 
                             !(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days) - Weekday(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days)) + 1 > _lastDayOfMonth)
                        Width: =MonthDayGallery1_1.TemplateWidth
                        Wrap: =false
                        ZIndex: =3

                iconNextMonth1_1 As icon.ChevronRight:
                    Height: =50
                    Icon: =Icon.ChevronRight
                    OnSelect: |-
                        =/*changes month view to next month*/
                        Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, 1, TimeUnit.Months));
                        Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
                        /*collects calendar events for all days in current month view. Updates _maxDate to prevent duplicate data collection if user returns to this month view*/
                        Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
                        If(_lastDayOfMonth > _maxDate, Set(_maxDate, _lastDayOfMonth); Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_firstDayOfMonth, DateTimeFormat.UTC), Text(_maxDate, DateTimeFormat.UTC)).value))
                    PaddingBottom: =7
                    PaddingLeft: =7
                    PaddingRight: =7
                    PaddingTop: =7
                    TabIndex: =0
                    Tooltip: ="View next month"
                    Visible: =_calendarVisible
                    Width: =59
                    X: =536
                    Y: =136
                    ZIndex: =6

                iconPrevMonth1_1 As icon.ChevronLeft:
                    Height: =50
                    Icon: =Icon.ChevronLeft
                    OnSelect: |-
                        =/*changes month view to previous month*/
                        Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, -1, TimeUnit.Months));
                        Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
                        Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
                        /*collects calendar events for all days in current month view. Updates _minDate to prevent duplicate data collection if user returns to this month view*/
                        If(_minDate > _firstDayOfMonth, Set(_minDate, _firstDayOfMonth); Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_minDate, DateTimeFormat.UTC), Text(_lastDayOfMonth, DateTimeFormat.UTC)).value))
                    PaddingBottom: =7
                    PaddingLeft: =7
                    PaddingRight: =7
                    PaddingTop: =7
                    TabIndex: =0
                    Tooltip: ="View previous month"
                    Visible: =_calendarVisible
                    Width: =59
                    X: =435
                    Y: =136
                    ZIndex: =7

            Container1 As groupContainer.manualLayoutContainer:
                FillPortions: =0.4
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                ZIndex: =3

    navbar_4 As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =5

        Rectangle1_4 As rectangle:
            Fill: =RGBA(237, 237, 237, 0.7)
            Height: =1117
            Visible: =var
            Width: =1728
            ZIndex: =2

        Icon2_4 As icon.Cancel:
            Color: =RGBA(0, 0, 0, 1)
            Height: =45
            Icon: =Icon.Cancel
            OnSelect: =Set(var,false)
            Visible: =var
            Width: =50
            X: =339
            Y: =27
            ZIndex: =4

